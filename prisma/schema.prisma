generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int                   @id @default(autoincrement())
  fullname            String                // lấy name từ Google
  email               String                @unique
  password            String?               // nullable for Google OAuth
  googleId            String?               // for Google OAuth
  firstName           String?               // given_name từ Google
  lastName            String?               // family name từ Google
  avatarUrl           String?               // picture URL từ Google hoặc avt tùy chọn
  isEmailVerified     Boolean               @default(false)
  provider            Provider              @default(LOCAL)
  locate              String?               
  phoneNumber         String                @map("phone_number")
  department          String                @map("department")
  dateOfBirth         String                @map("date_of_birth")
  position            String                @map("position")
  status              Status                @default(ACTIVE)
  lastLogin           DateTime?             
  role                Role                  @default(MEMBER)
  createAt            DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  refreshTokens       RefreshToken[]
  resetToken          ResetPasswordToken[]
}

model RefreshToken {
  id          String      @id @default(uuid())
  expiresAt   DateTime    @map("expires_at")
  createdAt   DateTime    @default(now())
  lastUsedAt  DateTime?   @map("last_used_at")
  isRevoked   Boolean     @default(false) @map("is_revoked")
  revokedAt   DateTime?   @map("revoked_at")
  user        User?       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int?        @map("user_id")
}

model ResetPasswordToken {
  id            Int         @id @default(autoincrement())
  hashedToken   String      @map("hashed_token")
  expiresAt     DateTime    @map("expires_at")
  createdAt     DateTime    @default(now())
  isUsed        Boolean     @map("is_used")
  usedAt        DateTime    @map("used_at")
  user          User?       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int?        @map("user_id")
}

enum Role {
  ADMIN
  MODERATOR
  MEMBER
}

enum Provider {
  LOCAL
  GOOGLE
}

enum Status {
  ACTIVE
  INACTIVE
}
